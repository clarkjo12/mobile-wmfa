'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _curry = require('lodash/curry');

var _curry2 = _interopRequireDefault(_curry);

var _es = require('../template/es5');

var _es2 = _interopRequireDefault(_es);

var _defaultOptions = require('./defaultOptions');

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _handleDeprecation = require('./handleDeprecation');

var _handleDeprecation2 = _interopRequireDefault(_handleDeprecation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parseArgs(rootFolder) {
  for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }

  // Parse Arguments
  var secondArg = rest[0];
  var lastArg = rest.slice(-1)[0];
  var outputFilenameAs2ndArg = typeof secondArg === 'string' ? secondArg : undefined;
  var givenOptions = (typeof lastArg === 'undefined' ? 'undefined' : _typeof(lastArg)) === 'object' ? lastArg : {};
  var template = givenOptions.es5 ? _es2.default : givenOptions.template || _defaultOptions2.default.template;
  var options = _extends({}, _defaultOptions2.default, givenOptions);

  var deprecated = {
    include: {
      message: '\'include\' options are deprecated.',
      sub: 'submodules'
    },
    outputFilenameAs2ndArg: {
      message: '\'outputFilename\' in second position is deprecated.',
      sub: 'outputFilename'
    }
  };

  var beforeDeprecation = _extends({}, options, {
    rootFolder: rootFolder,
    outputFilenameAs2ndArg: outputFilenameAs2ndArg,
    template: template
  });

  var finalOptions = (0, _handleDeprecation2.default)(deprecated, beforeDeprecation);

  return finalOptions;
}

exports.default = (0, _curry2.default)(parseArgs);
module.exports = exports['default'];